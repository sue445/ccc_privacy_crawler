name: build

on:
  push:
    branches:
      - main
      - deploy/** # deploy PR branches
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgresql:
        image: postgres:10-alpine
        ports:
          - 5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true

      - name: Run test
        run: |
          set -xe
          bundle exec rake ar:migrate:reset
          bundle exec rspec
        env:
          RACK_ENV: test
          POSTGRESQL_PORT: ${{ job.services.postgresql.ports['5432'] }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}

      - name: Slack Notification (not success)
        uses: lazy-actions/slatify@master
        if: "! success()"
        continue-on-error: true
        with:
          job_name: test
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  rubocop:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true

      - run: bundle exec rubocop

      - name: Slack Notification (not success)
        uses: lazy-actions/slatify@master
        if: "! success()"
        continue-on-error: true
        with:
          job_name: rubocop
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs:
      - test
      - rubocop

    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/deploy/')) }}

    runs-on: ubuntu-latest

    environment: production
    concurrency: production

    permissions:
      contents: read
      id-token: write

    env:
      WORKLOAD_IDENTITY_PROVIDER: "projects/952661857570/locations/global/workloadIdentityPools/ccc-privacy-crawler/providers/github-actions"
      SERVICE_ACCOUNT_EMAIL: "deployer@ccc-privacy-crawler.iam.gserviceaccount.com"

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - run: ./.github/workflows/prepare_app_yaml.sh
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - id: deploy
        uses: google-github-actions/deploy-appengine@v0
        with:
          deliverables: app.yaml # cron.yaml # TODO: Do after

      - run: bundle exec rake appengine:exec -- ./appengine/exec.sh rake ar:migrate
